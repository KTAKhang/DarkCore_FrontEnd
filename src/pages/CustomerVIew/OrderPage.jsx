import { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { toast } from "react-toastify";

const OrderPage = () => {
    const navigate = useNavigate();
    const location = useLocation();
    const [order, setOrder] = useState(null);
    const [address, setAddress] = useState("");
    const [phone, setPhone] = useState("");
    const [note, setNote] = useState("");
    const [loading, setLoading] = useState(false);

    // Nh·∫≠n orderId t·ª´ query param (?orderId=...)
    const query = new URLSearchParams(location.search);
    const orderId = query.get("orderId");

    useEffect(() => {
        if (!orderId) {
            toast.error("Kh√¥ng t√¨m th·∫•y ƒë∆°n h√†ng!");
            navigate("/cart");
            return;
        }

        const token = localStorage.getItem("token");
        fetch(`http://localhost:3007/api/orders/${orderId}`, {
            headers: { Authorization: `Bearer ${token}` },
        })
            .then((res) => res.json())
            .then((data) => setOrder(data.order))
            .catch(() => toast.error("Kh√¥ng t·∫£i ƒë∆∞·ª£c th√¥ng tin ƒë∆°n h√†ng"));
    }, [orderId, navigate]);

    const handlePay = async () => {
        if (!phone || !address) {
            toast.error("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß ƒë·ªãa ch·ªâ v√† s·ªë ƒëi·ªán tho·∫°i");
            return;
        }

        try {
            setLoading(true);
            const token = localStorage.getItem("token");

            // üß© G·ªçi API c·∫≠p nh·∫≠t th√¥ng tin nh·∫≠n h√†ng
            await fetch(`http://localhost:3007/api/orders/${orderId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${token}`,
                },
                body: JSON.stringify({
                    receiverAddress: address,
                    receiverPhone: phone,
                    note,
                }),
            });

            // üßæ T·∫°o li√™n k·∫øt thanh to√°n VNPay
            const payRes = await fetch(
                "http://localhost:3007/api/payment/vnpay/create",
                {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: `Bearer ${token}`,
                    },
                    body: JSON.stringify({
                        orderId,
                        amount: order?.totalPrice || 0,
                    }),
                }
            );

            const payData = await payRes.json();

            if (payData?.paymentUrl) {
                window.location.href = payData.paymentUrl;
            } else {
                toast.error("Kh√¥ng t·∫°o ƒë∆∞·ª£c li√™n k·∫øt thanh to√°n");
            }
        } catch (err) {
            console.error(err);
            toast.error("L·ªói khi thanh to√°n VNPay");
        } finally {
            setLoading(false);
        }
    };

    if (!order)
        return (
            <div className="p-8 text-center">
                <h2 className="text-xl font-bold text-gray-800">ƒêang t·∫£i ƒë∆°n h√†ng...</h2>
            </div>
        );

    return (
        <div className="max-w-2xl mx-auto bg-white shadow-md rounded-lg p-6 mt-10">
            <h1 className="text-2xl font-bold text-gray-900 mb-6">X√°c nh·∫≠n ƒë∆°n h√†ng</h1>

            <div className="space-y-4">
                <div className="flex justify-between border-b pb-2">
                    <span>M√£ ƒë∆°n h√†ng:</span>
                    <span className="font-bold text-blue-600">{order.orderNumber}</span>
                </div>
                <div className="flex justify-between border-b pb-2">
                    <span>T·ªïng ti·ªÅn:</span>
                    <span className="font-bold text-red-600">
                        {new Intl.NumberFormat("vi-VN").format(order.totalPrice)}‚Ç´
                    </span>
                </div>
            </div>

            <div className="mt-6">
                <label className="block mb-2 font-medium">ƒê·ªãa ch·ªâ nh·∫≠n h√†ng</label>
                <input
                    value={address}
                    onChange={(e) => setAddress(e.target.value)}
                    placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ nh·∫≠n h√†ng"
                    className="w-full border rounded-lg p-2"
                />
            </div>

            <div className="mt-4">
                <label className="block mb-2 font-medium">S·ªë ƒëi·ªán tho·∫°i</label>
                <input
                    value={phone}
                    onChange={(e) => setPhone(e.target.value)}
                    placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                    className="w-full border rounded-lg p-2"
                />
            </div>

            <div className="mt-4">
                <label className="block mb-2 font-medium">Ghi ch√∫</label>
                <textarea
                    value={note}
                    onChange={(e) => setNote(e.target.value)}
                    placeholder="Ghi ch√∫ cho ƒë∆°n h√†ng"
                    className="w-full border rounded-lg p-2"
                />
            </div>

            <button
                onClick={handlePay}
                disabled={loading}
                className="w-full mt-6 bg-blue-600 text-white py-3 rounded-lg font-bold hover:bg-blue-700"
            >
                {loading ? "ƒêang x·ª≠ l√Ω..." : "Thanh to√°n VNPay"}
            </button>
        </div>
    );
};

export default OrderPage;
